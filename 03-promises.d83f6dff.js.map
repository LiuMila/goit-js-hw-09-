{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEAD,EAAAE,OAAOC,KAAK,CACVC,MAAO,QACPC,cAAc,EACdC,SAAU,OACVC,SAAS,IAGX,IAAMC,EAAUC,SAASC,cAAc,SAEnCC,GAAW,EAEf,SAASC,EAAcC,EAAUC,EAAOC,GACtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,WACLT,IAAaE,IACfJ,GAAW,GAETQ,GACFF,EAAQ,CAAEJ,WAAUC,UAGtBI,EAAO,CAAEL,WAAUC,S,GAClBA,E,IA4BPN,EAAQe,iBAAiB,UAxBzB,SAAkBC,GAGhB,GAFAA,EAAEC,kBAEEd,EAAJ,CAIA,IAAgCe,EAAAF,EAAEG,cAA1BC,EAAwBF,EAAxBZ,MAAOe,EAAiBH,EAAjBG,KAAMC,EAAWJ,EAAXI,OACjBC,EAAaC,SAASJ,EAAMK,OAChCtB,GAAW,EAEX,IAAK,IAAIuB,EAAI,EAAGA,GAAKJ,EAAOG,MAAOC,GAAK,EACtCtB,EAAcsB,EAAGH,EAAYC,SAASF,EAAOG,QAC1CE,MAAK,SAAAC,G,IAAGvB,EAAQuB,EAARvB,SAAUC,EAAKsB,EAALtB,MACjBd,EAAAE,OAAOmC,QAAQ,uBAAwCC,OAAfzB,EAAS,QAAYyB,OAANxB,EAAM,M,IAE9DyB,OAAM,SAAAH,G,IAAGvB,EAAQuB,EAARvB,SAAUC,EAAKsB,EAALtB,MAClBd,EAAAE,OAAOsC,QAAQ,sBAAqCF,OAAfzB,EAAS,QAAYyB,OAANxB,EAAM,M,IAG9DiB,GAAcC,SAASH,EAAKI,MAhB5B,C","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nNotify.init({\n  width: '320px',\n  clickToClose: true,\n  fontSize: '16px',\n  useIcon: false,\n});\n\nconst formRef = document.querySelector('.form');\n\nlet isActive = false;\n\nfunction createPromise(position, delay, lastPromise) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (position === lastPromise) {\n        isActive = false;\n      }\n      if (shouldResolve) {\n        resolve({ position, delay });\n      }\n\n      reject({ position, delay });\n    }, delay);\n  });\n}\n\nfunction onSubmit(e) {\n  e.preventDefault();\n\n  if (isActive) {\n    return;\n  }\n\n  const { delay, step, amount } = e.currentTarget;\n  let delayCount = parseInt(delay.value);\n  isActive = true;\n\n  for (let i = 1; i <= amount.value; i += 1) {\n    createPromise(i, delayCount, parseInt(amount.value))\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n\n    delayCount += parseInt(step.value);\n  }\n}\n\nformRef.addEventListener('submit', onSubmit);\n"],"names":["$h6c0i","parcelRequire","Notify","init","width","clickToClose","fontSize","useIcon","$ce04d3a99e08e73b$var$formRef","document","querySelector","$ce04d3a99e08e73b$var$isActive","$ce04d3a99e08e73b$var$createPromise","position","delay","lastPromise","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","e","preventDefault","_currentTarget","currentTarget","delay1","step","amount","delayCount","parseInt","value","i","then","param","success","concat","catch","failure"],"version":3,"file":"03-promises.d83f6dff.js.map"}