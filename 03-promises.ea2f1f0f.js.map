{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEAD,EAAAE,OAAOC,KAAK,CACVC,MAAO,QACPC,cAAc,EACdC,SAAU,OACVC,SAAS,IAGX,MAAMC,EAAUC,SAASC,cAAc,SAEvC,IAAIC,GAAW,EAEf,SAASC,EAAcC,EAAUC,EAAOC,GACtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,KACLT,IAAaE,IACfJ,GAAW,GAETQ,GACFF,EAAQ,C,SAAEJ,E,MAAUC,IAGtBI,EAAO,C,SAAEL,E,MAAUC,GAAQ,GAC1BA,EAAM,G,CA4BbN,EAAQe,iBAAiB,UAxBzB,SAAkBC,GAGhB,GAFAA,EAAEC,iBAEEd,EACF,OAGF,MAAQG,MAAAY,EAAKC,KAAEA,EAAIC,OAAEA,GAAWJ,EAAEK,cAClC,IAAIC,EAAaC,SAASL,EAAMM,OAChCrB,GAAW,EAEX,IAAK,IAAIsB,EAAI,EAAGA,GAAKL,EAAOI,MAAOC,GAAK,EACtCrB,EAAcqB,EAAGH,EAAYC,SAASH,EAAOI,QAC1CE,MAAK,EAACrB,SAAEA,EAAQC,MAAEA,MACjBd,EAAAE,OAAOiC,QAAQ,uBAAqBtB,QAAiBC,MAAU,IAEhEsB,OAAM,EAACvB,SAAEA,EAAQC,MAAEA,MAClBd,EAAAE,OAAOmC,QAAQ,sBAAoBxB,QAAeC,MAAU,IAGhEgB,GAAcC,SAASJ,EAAKK,M","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nNotify.init({\n  width: '320px',\n  clickToClose: true,\n  fontSize: '16px',\n  useIcon: false,\n});\n\nconst formRef = document.querySelector('.form');\n\nlet isActive = false;\n\nfunction createPromise(position, delay, lastPromise) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (position === lastPromise) {\n        isActive = false;\n      }\n      if (shouldResolve) {\n        resolve({ position, delay });\n      }\n\n      reject({ position, delay });\n    }, delay);\n  });\n}\n\nfunction onSubmit(e) {\n  e.preventDefault();\n\n  if (isActive) {\n    return;\n  }\n\n  const { delay, step, amount } = e.currentTarget;\n  let delayCount = parseInt(delay.value);\n  isActive = true;\n\n  for (let i = 1; i <= amount.value; i += 1) {\n    createPromise(i, delayCount, parseInt(amount.value))\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n\n    delayCount += parseInt(step.value);\n  }\n}\n\nformRef.addEventListener('submit', onSubmit);\n"],"names":["$iQIUW","parcelRequire","Notify","init","width","clickToClose","fontSize","useIcon","$47d4ff9957288465$var$formRef","document","querySelector","$47d4ff9957288465$var$isActive","$47d4ff9957288465$var$createPromise","position","delay","lastPromise","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","e","preventDefault","delay1","step","amount","currentTarget","delayCount","parseInt","value","i","then","success","catch","failure"],"version":3,"file":"03-promises.ea2f1f0f.js.map"}